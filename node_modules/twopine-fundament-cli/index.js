#!/usr/bin/env node

/**
 * twopine-fundament-cli
 * A CLI for handling the Twopine Fundament
 *
 * @author Twopine <https://www.twopine.nl/>
 */

const init = require('./utils/init');
const cli = require('./utils/cli');
const log = require('./utils/log');
const input = cli.input;
const flags = cli.flags;
const { clear, debug } = flags;
const https = require('https'); // or 'https' for https:// URLs
const fs = require('fs');

(async () => {
	init({ clear });
	input.includes(`help`) && cli.showHelp(0);
	debug && log(flags)

	if (input.includes('use')) {
		const url = `https://twopine.nl/assets/css/${flags.component}.css`;

		https.get(url, (res) => {
			// Image will be stored at this path
			const path = `${__dirname}/css/${flags.component}.css`;
			const filePath = fs.createWriteStream(path);
			res.pipe(filePath);
			filePath.on('finish', () => {
				filePath.close();
				console.log('Download Completed');
			})
		})
	}

	if (input.includes('get')) {

		let mainScss = './scss/main.scss'
		let logger = fs.createWriteStream(mainScss, {
			flags: 'a'
		})

		// Get all files in directory of component
		let files = fs.readdirSync(`${__dirname}/node_modules/npm-webc-lib/${flags.component}/`);

		// Get all file extensions in files
		function getFileExtension(filename) {
			return filename.substring(filename.lastIndexOf('.') + 1, filename.length) || filename;
		}

		// Copy file to matching project folder
		function copyFile(file) {

		let fileExtension = getFileExtension(file);
		let extensionTypes = ['js', 'css', 'scss', 'html']

		extensionTypes.map(extensionType => {
			if (fileExtension && fileExtension === extensionType) {
				fs.copyFile(`./node_modules/npm-webc-lib/${flags.component}/${file}`, `./${fileExtension}/${file}`, (err) => {
					if (err)
						throw err;
				})

				if(extensionType === 'scss') {
					logger.write(`@import './${file}';\n`)
				}
			}})
		}

		files.map(file => {
			copyFile(file)
		})
	}
})();
