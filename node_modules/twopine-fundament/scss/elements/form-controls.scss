.form-field {
    display: flex;
    width: 100%;
    flex-wrap: wrap;
    position: relative;
}

label {
    width: 100%;
    padding-bottom: var(--padding-x-small);
}

input {
    font-size: var(--font-size);
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
    position: relative;
    width: 100%;
    padding: var(--padding) var(--padding-small);
    border-width: var(--border-width);
    border-radius: var(--border-radius);
    border-style: var(--border-style);
    border-color: var(--color-neutral-40);
}

.form-field.floating input:disabled~label {
    color: var(--color-neutral-70);
    font-weight: 400;
}

input:disabled,
input:disabled:hover {
    border: var(--border-width) var(--border-style) var(--color-neutral-20);
    background-color: var(--color-neutral-20);
    color: var(--color-neutral-50);
    cursor: not-allowed;
}

input:hover {
    border-color: var(--color-primary-hover);
}

input:active {
    border-color: var(--color-neutral-50);
}

input:focus-within {
    outline: var(--border-width) var(--border-style) var(--color-primary-focus);
}

input:required+p.helper {
    display: none;
}

.helper {
    font-size: var(--font-size-helper);
}

input:required+label:after {
    margin-left: var(--padding);
    content: "*";
    color: var(--error);
}

input[type="checkbox"],
input[type="radio"] {
    width: auto;
    align-self: center;
    margin-right: 5px;
}

#password-icons {
    position: absolute;
    right: var(--padding);
    bottom: var(--padding);
}

input[type="password"]+div svg,
input[type="text"]+div svg {
    fill: var(--color-neutral-40);
    height: 1rem;
    position: absolute;
    right: var(--padding);
    bottom: var(--padding);
}

input[type="password"]+svg:hover,
input[type="text"]+svg:hover {
    fill: var(--color-primary-hover);
}

input[type="password"]:disabled+div svg,
input[type="text"]:disabled+div svg {
    cursor: not-allowed;
    fill: var(--color-neutral-40);
}

input[type="password"]+svg:first-child {
    display: none;
}

input[type="password"]+svg:last-child {
    display: none;
}

input:required:invalid {
    border-color: var(--error);
}

.required:after {
    color: var(--error);
    content: " * ";
}

.form-field.floating label {
    pointer-events: none;
    top: 0;
    left: 0;
    position: absolute;
    z-index: 1;
    padding: 1rem 0.75rem;
    transform-origin: 0 0;
    transition: opacity .1s ease-in-out, transform .1s ease-in-out;
}

.form-field.floating input {
    padding: 1rem 0.75rem;
    height: calc(3.5rem + 2px);
    line-height: 1.25;
}

.form-field.floating input:focus~label,
.form-field.floating input:not(:placeholder-shown)~label {
    opacity: .65;
    transform: scale(.85) translateY(-0.5rem) translateX(0.15rem);
}

.form-field.floating input:focus,
.form-field.floating input:not(:placeholder-shown) {
    padding-top: 1.625rem;
    padding-bottom: 0.625rem;
}

.form-field.floating input:not(:focus)::placeholder {
    color: transparent;
}

input~.feedback {
    display: none;
    opacity: 0.65;
    transform: scale(0.85);
    transform-origin: 0;
}

input:required:invalid~.feedback {
    display: block;
}

input[type="reset"],
input[type="submit"] {
    transition: ease-in-out 0.2s all;
    box-sizing: content-box;
    padding: var(--padding);
    color: var(--color-neutral-10);
    font-size: var(--font-size);
    border-radius: var(--border-radius);
    border-width: var(--border-width);
    border-style: var(--border-style);
    border-color: var(--color-primary);
    background-color: var(--color-primary);
    cursor: pointer;
}

input[type="reset"]:hover,
input[type="submit"]:hover {
    transition: ease-in-out 0.2s all;
}

input[type="reset"]:hover,
input[type="submit"]:hover {
    background-color: var(--color-primary-hover);
}

input[type="reset"]:active,
input[type="submit"]:active {
    background-color: var(--color-primary-pressed);
}

input[type="reset"]:focus-visible,
input[type="submit"]:focus-visible {
    outline: var(--border-width) var(--border-style) var(--color-primary-focus);
}

input[type="reset"].outline:focus-visible,
input[type="submit"].outline:focus-visible {
    border-color: transparent;
}

button:disabled,
button.secondary:disabled,
button.outline:disabled,
button.text:disabled,
button[disabled] {
    border: var(--border-width) var(--border-style) var(--color-neutral-20);
    background-color: var(--color-neutral-20);
    color: var(--color-neutral-50);
    cursor: not-allowed;
}

button:disabled:hover,
button.outline:disabled:hover {
    color: var(--color-neutral-50);
}

button.secondary:disabled:hover {
    border-color: var(--color-neutral-20);
}

input[type="reset"].secondary,
input[type="submit"].secondary {
    color: var(--color-primary);
    background: var(--color-primary-bg);
    border-color: var(--color-primary-bg);
}

input[type="reset"].secondary:hover,
input[type="submit"]:hover.secondary {
    transition: ease-in-out 0.2s all;
    border-color: var(--color-primary);
}

input[type="reset"].secondary:active,
input[type="submit"]:active.secondary {
    background-color: var(--color-primary-bg);
    border-color: var(--color-primary-bg);
}

input[type="reset"].outline,
input[type="submit"].outline {
    color: var(--color-primary);
    background: var(--color-primary-bg);
    border-color: var(--color-primary-border);
}

input[type="reset"].outline:hover,
input[type="submit"].outline:hover {
    border-color: var(--color-primary-hover);
}

input[type="reset"].outline:active,
input[type="submit"].outline:active {
    color: var(--color-primary-pressed);
}

input[type="reset"].outline:disabled,
input[type="submit"].outline:disabled {
    border-color: var(--color-neutral-40);
}

input[type="reset"].text,
input[type="submit"].text {
    color: var(--color-primary);
    background: transparent;
    border-color: transparent;
}

input[type="reset"].text:hover,
input[type="submit"].text:hover {
    border-color: var(--color-primary-hover);
}

input[type="reset"].text:active,
input[type="submit"].text:active {
    color: var(--color-primary-pressed);
    border-color: transparent;
}

input[type="reset"].text:disabled,
input[type="submit"].text:disabled {
    border-color: transparent;
    background-color: transparent;
}

input[type=range] {
    -webkit-appearance: none;
    margin: 10px 0;
    width: 100%;
}

input[type=range]::-webkit-slider-runnable-track {
    width: 100%;
    height: 5px;
    cursor: pointer;
    animate: 0.2s;
    box-shadow: 0px 0px 0px #000000;
    background: var(--color-primary-bg);
    border-radius: 1px;
    border: 0px solid #000000;
}

input[type=range]::-webkit-slider-thumb {
    box-shadow: 0px 0px 0px #000000;
    border: 1px solid var(--color-primary-bg);
    height: 18px;
    width: 18px;
    border-radius: 25px;
    background: var(--color-primary);
    cursor: pointer;
    -webkit-appearance: none;
    margin-top: -7px;
}

input[type=range]:focus::-webkit-slider-runnable-track {
    background: var(--color-primary-bg);
}

input[type=range]::-moz-range-track {
    width: 100%;
    height: 5px;
    cursor: pointer;
    animate: 0.2s;
    box-shadow: 0px 0px 0px #000000;
    background: var(--color-primary-bg);
    border-radius: 1px;
    border: 0px solid #000000;
}

input[type=range]::-moz-range-thumb {
    box-shadow: 0px 0px 0px #000000;
    border: 1px solid var(--color-primary-bg);
    height: 18px;
    width: 18px;
    border-radius: 25px;
    background: var(--color-primary);
    cursor: pointer;
}

input[type=range]::-ms-track {
    width: 100%;
    height: 5px;
    cursor: pointer;
    animate: 0.2s;
    background: transparent;
    border-color: transparent;
    color: transparent;
}

input[type=range]::-ms-fill-lower {
    background: var(--color-primary-bg);
    border: 0px solid #000000;
    border-radius: 2px;
    box-shadow: 0px 0px 0px #000000;
}

input[type=range]::-ms-fill-upper {
    background: var(--color-primary-bg);
    border: 0px solid #000000;
    border-radius: 2px;
    box-shadow: 0px 0px 0px #000000;
}

input[type=range]::-ms-thumb {
    margin-top: 1px;
    box-shadow: 0px 0px 0px #000000;
    background: var(--color-primary-bg);
    height: 18px;
    width: 18px;
    border-radius: 25px;
    background: var(--color-primary-hover);
    cursor: pointer;
}

input[type=range]:focus::-ms-fill-lower {
    background: var(--color-primary-bg);
}

input[type=range]:focus::-ms-fill-upper {
    background: var(--color-primary-bg);
}